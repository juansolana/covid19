"""
Django settings for covidmap project.

Generated by 'django-admin startproject' using Django 3.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import json

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

with open(BASE_DIR + '/secrets/secrets.json') as f:
    SECRETS = json.load(f)

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
# SECRET_KEY = 'rm(207ygu6stc8o1-z87nu-hqa_%7@lecd==4@rr)++(#34&zt'
SECRET_KEY = SECRETS['SECRET_KEY_PROD']

# MAP KEY
MAPBOX_KEY = 'pk.eyJ1IjoianVhbnNvbGFuYSIsImEiOiJjazhncjR0enIwNGsxM2dvNHBqaXg0MGoxIn0.Y4m5LDMN6czSQhS7aAx0dw'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', 'c19tracker-ok2gaxescq-uc.a.run.app']

if os.getenv('GCR_INSTANCE'): # A Google Cloud Run env variable
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
else:
    # To verify user through sending a link, this one is to work through console
    EMAIL_BACKEND = 'django.core.mail.backends.console.EmailBackend'


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # 'django.contrib.sites',
    'c19map',
    'django.contrib.gis',
    'mapbox_location_field',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'covidmap.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'covidmap.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }

# login cmd psql -h 127.0.0.1 -p 25432 -U juan -d c19persons
DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        'NAME': 'c19persons',
        'USER': 'juan',
        'PASSWORD': SECRETS['DB_PASSWORD'],
        # 'HOST': 'localhost',
        'PORT': '25432'
    }
}

# In the flexible environment, you connect to CloudSQL using a unix socket.
# Locally, you can use the CloudSQL proxy to proxy a localhost connection
# to the instance
DATABASES['default']['HOST'] = '/cloudsql/ethereal-yen-274604:us-central1:c19persons'
if os.getenv('GCR_INSTANCE'): # A Google Cloud Run env variable
    DATABASES['default']['NAME'] = 'c19cases'
    DATABASES['default']['PORT'] = '5432'
else:
    DATABASES['default']['HOST'] = '127.0.0.1'

if os.getenv('SETTINGS_MODE') == 'prod':
    DATABASES['default']['NAME'] = 'c19cases'
    DATABASES['default']['PORT'] = '5432'
    DATABASES['default']['HOST'] = 'localhost'



# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

# STATIC_URL = '/static/'
STATIC_URL = 'https://storage.googleapis.com/c19map/static/'
STATIC_ROOT = 'c19map/static/'
